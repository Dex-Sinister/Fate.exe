@create +Roll Object

@@ Set db_fate to the DBref of the +Fate Object, and DB_SHEET to the DBref of the +Sheet Object. This example assumes that the +Fate Object is #9 and the +Sheet Object is #6.
&db_fate +Roll Object=#9
&DB_SHEET +Roll Object=#6

@link +Roll Object = #2
@set +Roll Object = WIZARD !NO_COMMAND
&ANSI +Roll Object=ansi(ch,strfirstof(%0,<+roll>))
&CMD +Roll Object=
&CMD`ROLL +Roll Object=
&CMD`ROLL`ARG +Roll Object=$+roll *:think u(fun`register,%0);@pemit %#=u(ansi) [switch(0,[@@(Are they free to roll?)]not(hasattr(%#,_roll)),You already have a roll active[chr(44)] which must be resolved before you continue. Use +roll/accept or +roll/clear.,[@@(Are they using a skill? If so, does it match an actual skill? Sets grabbed skill into %q<skill>.)]cor(not(isword(first(%q0))),complete(get(%#/_sheet`skills`data`list),first(%q0),skill,skill,|)),%qe,[@@(If recipients are provided, do they match actual players? Sets player DBrefs into %q<players>.)]switch(%q1,,[@@(Null string, all good)]1,[@@(Are they all players?)]lmath(and,iter(%q1,if(hastype(setr(i,switch(%i0,me,%#,pmatch(%i0))),player),[@@(It's a player. Append to the player list.)]1[setq(players,insert(%q<players>,-1,%qi))],[@@(It's not a player. Append to the error register.)]0[setq(e,insert(%qe,-1,%i0))])))),Error: [itemize(%qe)] [switch(words(%qe),1,is not a player,are not players)].,[@@(Are they all online?)]cor(not(strlen(%q<players>)),lmath(and,iter(%q<players>,if(hasflag(%i0,connected),1,0[setq(e,insert(%qe,-1,%i0))])))),Error: [itemize(iter(%qe,moniker(%i0),,|),|)] [switch(words(%qe),1,is,are)] not online.,[setr(z,[switch(%q<players>,,[@@(Null string. Do nothing.)],(Private: [itemize(sort(iter(%$0,moniker(%i0),,|),i,|),|)])%b)]%k rolls the Fate dice[switch(%q<skill>,,,%b+ %q<skill>)][switch(setr(mods,lmath(add,%q0)),0,[@@(Show nothing.)],<0,%b%$0,>0,%b+%$0)]. Result: [iter(setr(dice,iter(1 2 3 4,rand(-1,1))),switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%q<dice>),<0,%$0,+%$0)]). Total: [ladder(lmath(add,%q<dice> %q<mods> [setr(bonus,u(v(db_sheet)/fun`skill`rating,%#,%q<skill>))]))].[switch(%q2,[@@(No comment)],[@@(Show nothing)],%b[ansi(xh,(%$0))])][attrib_set(%#/_roll,%q<dice>|%q<skill>|%q<mods>|%q<bonus>|[setr(players,switch(%q<players>,[@@(No players)],[@@(Null string)],setunion(%q<players>,%#)))]|%q2)][setq(y,1)])])];@assert %qy;@switch %q<players>=,{@@ Null string. It's in the room.;@oemit %#=u(ansi) %qz;},{@@ Non-null string. It's private.;@pemit/list remove(%q<players>,%#)=u(ansi) %qz}
&CMD`ROLL`Q +Roll Object=
&CMD`ROLL`Q`ARG +Roll Object=$+roll/q *:think u(fun`register,%0);@pemit %#=u(ansi) [switch(0,[@@(Are they using a skill? If so, does it match an actual skill? Sets grabbed skill into %q<skill>.)]cor(not(isword(first(%q0))),complete(get(%#/_sheet`skills`data`list),first(%q0),skill,skill,|)),%qe,[@@(If recipients are provided, do they match actual players? Sets player DBrefs into %q<players>.)]switch(%q1,,[@@(Null string, all good)]1,[@@(Are they all players?)]lmath(and,iter(%q1,if(hastype(setr(i,switch(%i0,me,%#,pmatch(%i0))),player),[@@(It's a player. Append to the player list.)]1[setq(players,insert(%q<players>,-1,%qi))],[@@(It's not a player. Append to the error register.)]0[setq(e,insert(%qe,-1,%i0))])))),Error: [itemize(%qe)] [switch(words(%qe),1,is not a player,are not players)].,[@@(Are they all online?)]cor(not(strlen(%q<players>)),lmath(and,iter(%q<players>,if(hasflag(%i0,connected),1,0[setq(e,insert(%qe,-1,%i0))])))),Error: [itemize(iter(%qe,moniker(%i0),,|),|)] [switch(words(%qe),1,is,are)] not online.,[setr(z,[switch(%q<players>,,[@@(Null string. Do nothing.)],(Private: [itemize(sort(iter(%$0,moniker(%i0),,|),i,|),|)])%b)]%k quickly rolls the Fate dice[switch(%q<skill>,,,%b+ %q<skill>)][switch(setr(mods,lmath(add,%q0)),0,[@@(Show nothing.)],<0,%b%$0,>0,%b+%$0)]. Result: [iter(setr(dice,iter(1 2 3 4,rand(-1,1))),switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%q<dice>),<0,%$0,+%$0)]). Total: [ladder(lmath(add,%q<dice> %q<mods> [setr(bonus,u(v(db_sheet)/fun`skill`rating,%#,%q<skill>))]))].[switch(%q2,[@@(No comment)],[@@(Show nothing)],%b[ansi(xh,(%$0))])][setq(y,1)])])];@assert %qy;@switch %q<players>=,{@@ Null string. It's in the room.;@oemit %#=u(ansi) %qz;},{@@ Non-null string. It's private.;@pemit/list remove(%q<players>,%#)=u(ansi) %qz}
&CMD`ROLL/ACCEPT +Roll Object=$+roll/accept:@pemit %#=u(ansi) [switch(0,[@@(Do they have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Private roll? Sets _roll into %qa, players (if any) into %qp, and player output (if any) into %qx.)][setr(x,switch(setr(p,elements(setr(a,get(%#/_roll)),5,|)),[@@(Null string)],[@@(Do nothing)],(Private: [itemize(iter(sort(%$0,namei),moniker(%i0),,|),|)])%b))]You accept your [setr(z,current[@@(Skill?)][switch(elements(%qa,2,|),[@@(Null string)],[@@(Do nothing)],%b%$0)][@@(Mods?)][switch(elements(%qa,3,|),0,[@@(Do nothing)],<0,%b%$0,>0,%b+%$0)] roll. Final total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].[@@(Comment)][switch(elements(%qa,6,|),[@@(Null string)],[@@(Do nothing)],%b[ansi(xh,(%$0))])])][setq(y,1)][@@(Wipe the roll.)][attrib_set(%#/_roll)])];@assert %qy;@switch strlen(%qp)=0,{@@ Not a private roll.;@oemit %#=u(ansi) %k accepts %p %qz},{@@ Private roll.;@pemit/list remove(%qp,%#)=u(ansi) %qx%k accepts %p %qz}
&CMD`ROLL/CHECK +Roll Object=$+roll/check:@pemit %#=u(ansi) [switch(0,hasattr(%#,_roll),You don't have an active roll.,[@@(Reminder: _roll is of the format <1 dice>|<2 skill name>|<3 modifiers>|<4 total bonus>|<5 private-roll players>|<6 comment>)][@@(Private roll? Sets _roll into %qa.)][switch(elements(setr(a,get(%#/_roll)),5,|),[@@(Null string)],[@@(Do nothing)],(Private: [itemize(iter(sort(%$0,namei),moniker(%i0),,|),|)])%b)]You rolled the Fate dice[@@(Skill?)][switch(elements(%qa,2,|),[@@(Null string)],[@@(Do nothing)],%b+ %$0)][@@(Mods?)][switch(elements(%qa,3,|),0,[@@(Do nothing)],<0,%b%$0,>0,%b+%$0)]. Result: [iter(elements(%qa,1,|),switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,elements(%qa,1,|)),<0,%$0,+%$0)]). Total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].[@@(Comment.)][switch(elements(%qa,6,|),[@@(Null string)],[@@(Do nothing)],%b[ansi(xh,(%$0))])])]
&CMD`ROLL/CLEAR +Roll Object=$+roll/clear:@assert hasattr(%#,_roll)=@pemit %#=u(ansi) You don't have a roll active.;@pemit %#=u(ansi) You clear your active roll.[attrib_set(%#/_roll)]
&CMD`ROLL/COMPEL +Roll Object=$+roll/compel/*:@pemit %#=u(ansi) [switch(0,[@@(Do they have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Does the arg match an effect? Sets the effect into %q0.)]complete(Bonus Penalty Reroll,first(first(%0),/),effect,0),%qe,You compel [setr(z,for [art(%q0)] [switch(%q0,Bonus,+2 Bonus[setq(a,replace(setr(a,get(%#/_roll)),4,add(elements(%qa,4,|),2),|))],Penalty,-2 Penalty[setq(a,replace(setr(a,get(%#/_roll)),4,sub(elements(%qa,4,|),2),|))],Reroll,Reroll[setq(a,replace(get(%#/_roll),1,setr(d,iter(1 2 3 4,rand(-1,1))),|))]. New result: [iter(%qd,switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]))]. New total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].)][@@(Fate part.)]%r[u(v(db_fate)/ansi)] [switch(setr(j,rest(%0)),[@@(null string)],[@@(do nothing)],You justify your compel with "%qj"%b)]You now have [setr(zz,[setr(f,inc(get(%#/_sheet`fate)))] fate point[switch(%qf,1,,s)].)][@@(Messages.)][switch(elements(%qa,5,|),[@@(Null string, non-private roll.)],oemit(%#,u(ansi) %k compels %qz%r[u(v(db_fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p compel with "%qj" %S)] now has %q<zz>),pemit(remove(lcon(%l,connect),%#),u(ansi) %k compels %qz%r[u(v(db_fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p compel with "%qj" %S)] now has %q<zz>))][if(%qj,cemit(+Fate,%k justifies a compel with "%qj",1))][@@(Setting attributes.)][attrib_set(%#/_roll,%qa)][attrib_set(%#/_sheet`fate,%qf)])]
&CMD`ROLL/INVOKE +Roll Object=$+roll/invoke/*:@pemit %#=u(ansi) [switch(0,[@@(Do they have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Does the arg match an effect? Sets the effect into %q0.)]complete(Bonus Penalty Reroll,first(first(%0),/),effect,0),%qe,[@@(INVOKE ONLY: Do they have any FP? Sets their FP into %qf.)]gt(setr(f,get(%#/_sheet`fate)),0),You don't have any fate points left to invoke with.,[@@(INVOKE ONLY: If they've provided a player name, does it actually match? Sets player into %qp and player string into %qs.)]cor(not(strmatch(first(%0),*/*)),t(setr(p,locate(%#,setr(s,elements(first(%0),2,/)),Pym)))),'%qs' is not a player.,[@@(If they've provided a third word, does it match NPC? Sets 'is NPC' into %q<npc>.)]or(not(strmatch(first(%0),*/*/*)),setr(npc,match(ucstr(last(first(%0),/)),NPC))),After a player name[chr(44)] [u(ansi,+roll/invoke)] only accepts '[u(ansi,/NPC)]'.,[@@(Is the player someone other than themselves?)]cor(not(strlen(%qp)),not(match(%qp,%#)),%q<npc>),You cannot invoke against yourself.,You invoke[setr(z,[switch(%qp,[@@(Null string.)],[@@(Do nothing.)],%bagainst [moniker(%$0)][if(%q<npc>,'s NPC)])] for [art(%q0)] [switch(%q0,Bonus,+2 Bonus[setq(a,replace(setr(a,get(%#/_roll)),4,add(elements(%qa,4,|),2),|))],Penalty,-2 Penalty[setq(a,replace(setr(a,get(%#/_roll)),4,sub(elements(%qa,4,|),2),|))],Reroll,Reroll[setq(a,replace(get(%#/_roll),1,setr(d,iter(1 2 3 4,rand(-1,1))),|))]. New result: [iter(%qd,switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]))]. New total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].)]%r[u(v(db_fate)/ansi)] [switch(setr(j,rest(%0)),[@@(Null string)],[@@(Do nothing)],You justify your invoke with "%qj"%b)]You now have [setr(zz,[setr(f,dec(%qf))] fate point[switch(%qf,1,,s)][switch(%qp,[@@(null string)],[@@(do nothing)],[chr(44)] and [moniker(%qp)] has [if(%q<npc>,setr(f2,inc(get(%qp/_sheet`fate`npc))) NPC FP,setr(f2,inc(get(%qp/_sheet`fate))) fate point[switch(%q<f2>,1,,s)])])].)][switch(elements(%qa,5,|),[@@(Null string, non-private roll)],oemit(%#,u(ansi) %k invokes%qz%r[u(v(db_sheet`fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p invoke with "%qj" %S)] now has %q<zz>),pemit(remove(lcon(%l,connect),%#),u(ansi) %k invokes%qz%r[u(v(db_sheet`fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p invoke with "%qj" %S)] now has %q<zz>))][@@(Set roll.)][attrib_set(%#/_roll,%qa)][@@(Set FP.)][attrib_set(%#/_sheet`fate,%qf)][@@(If there's a target, set target FP.)][switch(1,%q<NPC>,attrib_set(%qp/_sheet`fate`npc,%q<f2>),%qp,attrib_set(%qp/_sheet`fate`npc,%q<f2>))][if(%qj,cemit(+Fate,%k justifies an invoke with "%qj",1))])]
&CMD`ROLL/MOD +Roll Object=$+roll/mod *:@pemit %#=u(ansi) [switch(0,[@@(Do you have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Valid int? Sets into %q0.)]isint(setr(0,first(%0,=))),Shift value must be a whole number.,[@@(Is %q0 != 0?)]neq(0,%q0),There is no point in modifying your roll by zero shifts.,You modify your [setr(z,[@@(Skill?)][switch(elements(setr(a,get(%#/_roll)),2,|),@@(null string),@@(do nothing),%$0%b)][@@(Mods?)][switch(elements(%qa,3,|),0,@@(do nothing),<0,%$0%b,>0,+%$0%b)]roll by %q0 shift[switch(%q0,1,,s)][switch(%0,*=*,[chr(44)] with justification "[rest(%0,=)]")]. New total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b) %q0))].[attrib_set(%#/_roll,[replace(%qa,3,add(elements(%qa,3,|),%q0),|)])])])]
&CMD`ROLL/NPC/COMPEL +Roll Object=$+roll/npc/compel/*:@pemit %#=u(ansi) [switch(0,[@@(Do they have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Does the arg match an effect? Sets the effect into %q0.)]complete(Bonus Penalty Reroll,first(first(%0),/),effect,0),%qe,Your [setr(z,NPC compels for [art(%q0)] [switch(%q0,Bonus,+2 Bonus[setq(a,replace(setr(a,get(%#/_roll)),4,add(elements(%qa,4,|),2),|))],Penalty,-2 Penalty[setq(a,replace(setr(a,get(%#/_roll)),4,sub(elements(%qa,4,|),2),|))],Reroll,Reroll[setq(a,replace(get(%#/_roll),1,setr(d,iter(1 2 3 4,rand(-1,1))),|))]. New result: [iter(%qd,switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]))]. New total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].)][@@(Fate part.)]%r[u(v(db_fate)/ansi)] [switch(setr(j,rest(%0)),[@@(null string)],[@@(do nothing)],You justify your NPC's compel with "%qj"%b)]You now have [setr(zz,[setr(f,inc(get(%#/_sheet`fate`npc)))] NPC FP.)][@@(Messages.)][switch(elements(%qa,5,|),[@@(Null string, non-private roll.)],oemit(%#,u(ansi) %k's NPC compels %qz%r[u(v(db_fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p NPC's compel with "%qj" %S)] now has %q<zz>),pemit(remove(%$0,%#),u(ansi) %k's NPC compels %qz%r[u(v(db_fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p NPC's compel with "%qj" %S)] now has %q<zz>))][if(%qj,cemit(+Fate,%k's NPC justifies a compel with "%qj",1))][@@(Setting attributes.)][attrib_set(%#/_roll,%qa)][attrib_set(%#/_sheet`fate`npc,%qf)])]
&CMD`ROLL/NPC/INVOKE +Roll Object=$+roll/npc/invoke/*:@pemit %#=u(ansi) [switch(0,[@@(Do they have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Does the arg match an effect? Sets the effect into %q0.)]complete(Bonus Penalty Reroll,first(first(%0),/),effect,0),%qe,[@@(INVOKE ONLY: Do they have any NPC FP? Sets their NPC FP into %qf.)]gt(setr(f,get(%#/_sheet`fate`npc)),0),You don't have any NPC FP points left to invoke with.,[@@(INVOKE ONLY: If they've provided a player name, does it actually match? Sets player into %qp and player string into %qs.)]cor(not(strmatch(first(%0),*/*)),t(setr(p,locate(%#,setr(s,elements(first(%0),2,/)),Pym)))),'%qs' is not a player.,[@@(If they've provided a third word, does it match NPC? Sets 'is NPC' into %q<npc>.)]or(not(strmatch(first(%0),*/*/*)),setr(npc,match(ucstr(last(first(%0),/)),NPC))),After a player name[chr(44)] [u(ansi,+roll/invoke)] only accepts '[u(ansi,/NPC)]'.,[@@(Is the player someone other than themselves?)]cor(not(strlen(%qp)),not(match(%qp,%#)),not(%q<npc>)),Your NPC cannot invoke against your NPC FP pool.,Your [setr(z,NPC invokes[switch(%qp,[@@(Null string.)],[@@(Do nothing.)],%bagainst [moniker(%$0)][if(%q<npc>,'s NPC)])] for [art(%q0)] [switch(%q0,Bonus,+2 Bonus[setq(a,replace(setr(a,get(%#/_roll)),4,add(elements(%qa,4,|),2),|))],Penalty,-2 Penalty[setq(a,replace(setr(a,get(%#/_roll)),4,sub(elements(%qa,4,|),2),|))],Reroll,Reroll[setq(a,replace(get(%#/_roll),1,setr(d,iter(1 2 3 4,rand(-1,1))),|))]. New result: [iter(%qd,switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]))]. New total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].)]%r[u(v(db_fate)/ansi)] [switch(setr(j,rest(%0)),[@@(Null string)],[@@(Do nothing)],You justify your invoke with "%qj"%b)]You now have [setr(zz,[setr(f,dec(%qf))] NPC FP[switch(%qp,[@@(null string)],[@@(do nothing)],[chr(44)] and [moniker(%qp)] has [if(%q<npc>,setr(f2,inc(get(%qp/_sheet`fate`npc))) NPC FP,setr(f2,inc(get(%qp/_sheet`fate))) fate point[switch(%q<f2>,1,,s)])])].)][switch(elements(%qa,5,|),[@@(Null string, non-private roll)],oemit(%#,u(ansi) %k's %qz%r[u(v(db_fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p invoke with "%qj" %S)] now has %q<zz>),pemit(remove(lcon(%l,connect),%#),u(ansi) %k's %qz%r[u(v(db_fate)/ansi)] %k[switch(%qj,[@@(null string)],[@@(do nothing)],%bjustifies %p invoke with "%qj" %S)] now has %q<zz>))][@@(Set roll.)][attrib_set(%#/_roll,%qa)][@@(Set NPC FP.)][attrib_set(%#/_sheet`fate`npc,%qf)][@@(If there's a target, set target FP.)][switch(1,%q<NPC>,attrib_set(%qp/_sheet`fate`npc,%q<f2>),%qp,attrib_set(%qp/_sheet`fate`npc,%q<f2>))][if(%qj,cemit(+Fate,%k justifies an invoke with "%qj",1))])]
&CMD`ROLL/TAG +Roll Object=$+roll/tag/*:@pemit %#=u(ansi) [switch(0,[@@(Do they have a roll?)]hasattr(%#,_roll),You don't have an active roll.,[@@(Does the arg match an effect? Sets the effect into %q0.)]complete(Bonus Penalty Reroll,first(first(%0),/),effect,0),%qe,You tag [setr(z,for [art(%q0)] [switch(%q0,Bonus,+2 Bonus[setq(a,replace(setr(a,get(%#/_roll)),4,add(elements(%qa,4,|),2),|))],Penalty,-2 Penalty[setq(a,replace(setr(a,get(%#/_roll)),4,sub(elements(%qa,4,|),2),|))],Reroll,Reroll[setq(a,replace(get(%#/_roll),1,setr(d,iter(1 2 3 4,rand(-1,1))),|))]. New result: [iter(%qd,switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]))]. New total: [ladder(lmath(add,elements(%qa,1 3 4,|,%b)))].)][@@(Fate part.)][if(setr(j,rest(%0)),%r[u(v(db_fate)/ansi)] You justify your [setr(zz,tag with "%qj")])][@@(Messages.)][switch(elements(%qa,5,|),[@@(Null string, non-private roll.)],oemit(%#,u(ansi) %k tags %qz[if(%qj,%r[u(v(db_fate)/ansi)] %k justifies %p %q<zz>)]),pemit(remove(%$0,%#),u(ansi) %k tags %qz[if(%qj,%r[u(v(db_fate)/ansi)] %k justifies %p %q<zz>)]))][if(%qj,cemit(Fate,%k justifies an invoke with "%qj",1))][@@(Setting attributes.)][attrib_set(%#/_roll,%qa)])]
&FUN +Roll Object=
&FUN`REGISTER +Roll Object=[@@(Accepts standard roll syntax ([<skill>][+<mods>] [=<recipients>] [(<comments>)]). Sets Skill+mods into %q0, recipients into %q1, and comments into %q2. If an arg is not provided, it is set as a null string.)][@@(Mods into %q0.)][setq(0,trim(edit(before(before(%0,[@@(Open paren.)]chr(40)),=),+,%b+,-,%b-,+%b,+,-%b,-)))][@@(Players into %q1.)][setq(1,trim(before(after(%0,=),[@@(Open paren.)]chr(40))))][@@(Comment into %q2.)][setq(2,if([@@(Is the rightmost character a close paren?)]eq(ord(right(setr(2,trim(after(%0,[@@(Open paren)]chr(40)))),1)),41),[@@(Trim the rightmost character.)]left(%q2,dec(strlen(%q2))),[@@(Give it as-is.)]%q2))]

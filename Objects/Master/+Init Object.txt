@create +Init Object

@@ Set DB_SHEET to the DBref of the +Sheet Object. This example assumes that the +Sheet Object is #6.
&DB_SHEET +Fate Object=#6

@link +Init Object = #2
@set +Init Object = WIZARD !NO_COMMAND
&ANSI +Init Object=[ansi(ch,strfirstof(%0,<+init>))]
&CMD +Init Object=
&CMD`INIT +Init Object=$+init:@pemit %#=u(ansi) [switch(0,[@@(Is there an init roster?)]hasattrval(%l,_init),Your location doesn't have an initiative roster.,Your location's initiative roster:%r%r[u(fun`format,get(%l/_init))])]
&CMD`INIT/ADD +Init Object=$+init/add *=*:@pemit %#=u(ansi) [switch(0,[@@(Actually given a name?)]strlen(%0),You must provide a name.,[@@(All skills sum to valid integers? Sets summed skills into %q1.)]lmath(and,iter(setr(1,iter(edit(first(%1,=),+,%b+,-,%b-,+%b,+,-%b,-),lmath(add,%i0),chr(44),`)),isint(%i0),`)),Initiative total [switch(words(%q1,`),>1,and all skill ratings must be whole numbers,must be a whole number)].,[@@(Valid speed, or speed not given? Sets speed rating into %q<speed>.)]cand(isint(setr(speed,strfirstof(rest(%1,=),0))),gte(%q<speed>,0)),Speed rating must be a whole number greater than or equal to zero.,You add [setr(z,%0 to the initiative roster[chr(44)] [if(setr(r,get(%#/_init`data`roll)),rolling,using)] [ladder(setr(0,add(first(%q1,`),switch(%q<speed>,1,4,0))))] initiative (tiebreaker[switch(rest(%q1,`),@@(null string),%bat [ladder(%q1)],[switch(words(%$0,`),1,,s)] at [itemize(iter(%$0,ladder(%i0),`,`),`)])])[@@(If they're rolling, do it now.)][if(%qr,. Result: [iter(setr(d,iter(1 2 3 4,rand(-1,1))),switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]). Total: [ladder(lmath(add,%qd %q0))],[@@(Not rolling, so set 0 into %qd.)][setq(d,0)])][switch(%q<speed>,0,@@(do nothing),%bwith [switch(%$0,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)] Speed)].)][oemit(%#,u(ansi) %k adds %qz)][setq(y,1)])];@assert %qy;think [@@(Set init word maximum into %q<max>.)][setq(max,lmath(max, [@@(Length from given arguments.)][add(5,max(2,words(%q1,`)))] [@@(Length from enactor's init.)][add(5,words(first(get(%#/_init`data`conflicts),|),`))] [@@(Length of each extant member of _init.)][iter(get(%l/_init),words(%i0,`),|)]))][@@(Set full init argument into %qi.)][setq(i,[setr(i,[@@(1. DBref)]#-1`[@@(2. Name)]%0`[@@(3. Random tiebreaker)][rand(1,100)]`[@@(4. Speed)][max(%q<speed>,0)]`[@@(5. Dice result)]%qd`[@@(6. Main total)]%q0`[@@(7. First tiebreaker - first skill if given, else, assume bonus)][switch(elements(%q1,2,`),@@(null string),%q1,%$0)][@@(8+ Other tiebreakers, if they exist.)][iter(ldelete(%q1,1 2,`),`%i0,`,)])][repeat(`0,sub(%q<max>,words(%qi,`)))])][@@(Set full initiative list into %qa.)][setq(a,u(fun`sort,insert(iter(get(%l/_init),switch(sub(%q<max>,words(%i0,`)),>0,%i0[repeat(`0,%$0)],%i0),|,|),-1,%qi,|),%q<max>))][@@(Set new +init.)][attrib_set(%l/_init,%qa)]
&CMD`INIT/CLEAR +Init Object=$+init/clear:@pemit %#=u(ansi) [switch(0,[@@(Does it have init?)]hasattr(%l,_init),Your location has no initiative roster.,You clear [setr(z,your location's initiative roster.)][oemit(%#,u(ansi) %k clears %qz)][attrib_set(%l/_init)])]
&CMD`INIT/JOIN +Init Object=$+init/join*:@pemit %#=u(ansi) [switch(0,[@@(Valid conflict? Sets conflict into %q0, and full conflict string into %qc. Assumes first conflict if none given.)]complete(iter(setr(c,get(%#/_init`data`conflicts)),first(%i0,`),|,|),strfirstof(trim(%0),first(first(%qc,|),`)),conflict type,0,|)[setq(c,grab(%qc,%q0*,|))],%qe,[@@(Are you already in the conflict? Sets full init list into %qa.)]not(match(setr(a,get(%l/_init)),%#`*,|)),You are already in your room's initiative roster.,You join [setr(z,the initiative roster[chr(44)] [if(setr(r,get(%#/_init`data`roll)),rolling,using)] [ladder(setr(2,add(first(setr(1,iter(rest(%qc,`),u(v(db_sheet)/fun`skill`rating,%#,%i0),`,`)),`),get(%#/_init`data`[edit(%q0,%b,_)]`bonus),if(eq(1,setr(speed,default(%#/_init`data`[edit(%q0,%b,_)]`speed,0))),4,0))))] [elements(%qc,2,`)] (tiebreaker[switch(words(%q1,`),1,%bat [ladder(%q1)],s at [itemize(iter(%q1,ladder(%i0),`,`),`)])])[@@(If they're rolling, do it now.)][if(%qr,. Result: [iter(setr(d,iter(1 2 3 4,rand(-1,1))),switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]). Total: [ladder(lmath(add,%qd %q2))],[@@(Not rolling, so set 0 into %qd.)]setq(d,0))][switch(%q<speed>,0,[@@(do nothing)],%bwith [switch(%$0,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)] Speed)].)][oemit(%#,u(ansi) %k joins %qz)][setq(y,1)])];@assert %qy;think [@@(Set init word maximum into %q<max>.)][setq(max,lmath(max, [@@(Length from enactor's init.)][add(5,words(%qc,`))] [@@(Length of each extant member of _init.)][iter(%qa,words(%i0,`),|)]))][@@(Set full init argument into %qi.)][setq(i,setr(i,[@@(1. DBref)]%#`[@@(2. name)]%k`[@@(3. Random tiebreaker)][rand(1,100)]`[@@(4. Speed)][max(%q<speed>,0)]`[@@(5. dice result)]%qd`[@@(6.Main total)]%q2`[@@(7+. tiebreakers)]%q1)[repeat(`0,sub(%q<max>,words(%qi,`)))])][@@(Set full initative list into %qa.)][setq(a,u(fun`sort,insert(iter(%qa,switch(sub(%q<max>,words(%i0,`)),>0,%i0[repeat(`0,%$0)],%i0),|,|),-1,%qi,|)))][@@(Set new +init.)][attrib_set(%l/_init,%qa)]
&CMD`INIT/LEAVE +Init Object=$+init/leave:@pemit %#=u(ansi) [switch(0,[@@(Is there init?)]hasattr(%l,_init),Your location has no initiative roster.,[@@(Are they in the init? Sets full init into %qa and their match into %qm.)]setr(m,match(setr(a,get(%l/_init)),%#`*,|)),You are not in your location's initiative roster.,You remove your[setr(z,self from the initiative roster.)][oemit(%#,u(ansi) %k removes %o%qz)][attrib_set(%l/_init,[ldelete(%qa,%qm,|)])])]
&CMD`INIT/REMOVE +Init Object=$+init/remove *:@pemit %#=u(ansi) [switch(0,[@@(Is there init?)]hasattr(%l,_init),Your location has no initiative roster.,[@@(Is %0 a valid int?)]cand(isint(%0),gt(%0,0)),Initiative number must be a whole number greater than zero.,[@@(Is %0 within the init? Sets full init into %qa.)]lte(%0,setr(w,words(setr(a,get(%l/_init)),|))),Your location's initiative roster only has %qw entr[switch(%qw,1,y,ies)].,You remove [setr(z,your location's [ordinal(%0)] initiative entry[chr(44)] [switch(first(setr(0,elements(%qa,%0,|)),`),#-1,NPC%b)][elements(%q0,2,`)].)][oemit(%#,u(ansi) %k removes %qz)][attrib_set(%l/_init,[ldelete(%qa,%0,|)])])]
&CMD`INIT/SHIFT-OTHER +Init Object=$+init/shift *=*:@pemit %#=u(ansi) [switch(0,[@@(Is there init?)]hasattr(%l,_init),Your location has no initiative roster.,[@@(Is %0 a valid int?)]cand(isint(%0),gt(%0,0)),Initiative number must be a whole number greater than zero.,[@@(Is it within the list? Sets whole list into %qa.)]lte(%0,setr(w,words(setr(a,get(%l/_init)),|))),Your location's initiative roster only has %qw entr[switch(%qw,1,y,ies)].,[@@(Is %1 a valid int?)]isint(%1),Shift value must be a whole number.,[@@(Is %1 != 0?)]neq(%0,0),There is no point in shifting initiative by zero shifts.,You shift [setr(z,your location's [ordinal(%0)] initiative entry[chr(44)] [switch(first(setr(u,elements(%qa,%0,|)),`),#-1,NPC%b)][elements(%qu,2,`)][chr(44)] by %1 shift[switch(%1,-1,,1,,s)]. New total: [ladder(lmath(add,elements(setr(u,replace(%qu,6,add(elements(%qu,6,`),%1),`)),5 6,`,%b)))].)][oemit(%#,u(ansi) %k shifts %qz)][attrib_set(%l/_init,[u(fun`sort,replace(%qa,%0,%qu,|))])])]
&CMD`INIT/SHIFT-SELF +Init Object=$+init/shift *:@break strmatch(%0,*=*);@pemit %#=u(ansi) [switch(0,[@@(Is there init?)]hasattr(%l,_init),Your location has no initiative roster.,[@@(Are they in the init? Sets full init into %qa and their match into %qm.)]setr(m,match(setr(a,get(%l/_init)),%#`*,|)),You are not in your location's initiative roster.,[@@(Is %0 a valid int?)]isint(%0),Shift value must be a whole number.,[@@(Is %0 != 0?)]neq(%0,0),There is no point in shifting your initiative by zero shifts.,Your shift your [setr(z,initiative by %0 shift[switch(%0,1,,-1,,s)]. New total: [ladder(lmath(add,elements(setr(u,replace(setr(u,elements(%qa,%qm,|)),6,add(elements(%qu,6,`),%0),`)),5 6,`,%b)))].)][attrib_set(%l/_init,[u(fun`sort,replace(%qa,%qm,%qu,|))])])]
&CMD`INIT/SHIFT/SPEED-OTHER +Init Object=$+init/shift/speed *=*:@pemit %#=u(ansi) [switch(0,[@@(Is there init?)]hasattr(%l,_init),Your location has no initiative roster.,[@@(Is %0 a valid int?)]cand(isint(%0),gt(%0,0)),Initiative number must be a whole number greater than zero.,[@@(Is it within the list? Sets whole list into %qa.)]lte(%0,setr(w,words(setr(a,get(%l/_init)),|))),Your location's initiative roster only has %qw entr[switch(%qw,1,y,ies)].,[@@(Is %1 a valid int?)]cand(isint(%1),gte(%1,0)),Speed value must be a whole number of at least zero.,[@@(Is it different from their current speed? Sets current speed into %qs and whole word into %qu.)]neq(%1,setr(s,elements(setr(u,elements(%qa,%0,|)),4,`))),Your location's [ordinal(%0)] initiative[chr(44)] [switch(first(%qu,`),#-1,NPC%b)][elements(%qu,2,`)][chr(44)] is already using [switch(%1,0,mortal,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)] Speed.,You change [setr(z,your location's [ordinal(%0)] initiative[chr(44)] [switch(first(%qu,`),#-1,NPC%b)][elements(%qu,2,`)][chr(44)] to [switch(%1,0,mortal,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)] Speed.)][@@(Switch to adjust Total if Speed is moving into or out of Inhuman.)][switch(1,%1,[@@(Speed is becoming Inhuman. Increase bonus by 4.)][setq(u,replace(%qu,6,add(elements(%qu,6,`),4),`))],%qs,[@@(Speed is losing Inhumanity. Decrease bonus by 4.)][setq(u,replace(%qu,6,sub(elements(%qu,6,`),4),`))],[@@(Speed is not changing to or away Inhuman. Leave Bonus as is.)])][oemit(%#,u(ansi) %k changes %qz)][attrib_set(%l/_init,[u(fun`sort,replace(%qa,%0,replace(%qu,4,%1,`),|))])])]
&CMD`INIT/SHIFT/SPEED-SELF +Init Object=$+init/shift/speed *:@break strmatch(%0,*=*);@pemit %#=u(ansi) [switch(0,[@@(Is there init?)]hasattr(%l,_init),Your location has no initiative roster.,[@@(Are they in the init? Sets full init into %qa and their match into %qm.)]setr(m,match(setr(a,get(%l/_init)),%#`*,|)),You are not in your location's initiative roster.,[@@(Is %0 a valid int?)]cand(isint(%0),gte(%0,0)),Speed value must be a whole number of at least zero.,[@@(Is it different from their current speed? Sets current init-word into %qu and current speed into %qs.)]neq(%0,setr(s,elements(setr(u,elements(%qa,%qm,|)),4,`))),You're already using [switch(%0,0,mortal,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)] Speed.,You change your [setr(z,initiative Speed to [switch(%0,0,mortal,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)].)][@@(Switch to adjust Total if Speed is moving into or out of Inhuman.)][switch(1,%0,[@@(Speed is becoming Inhuman. Increase bonus by 4.)][setq(u,replace(%qu,6,add(elements(%qu,6,`),4),`))],%qs,[@@(Speed is losing Inhumanity. Decrease bonus by 4.)][setq(u,replace(%qu,6,sub(elements(%qu,6,`),4),`))],[@@(Speed is not changing to or away Inhuman. Leave Bonus as is.)])][oemit(%#,u(ansi) %k changes %p %qz)][attrib_set(%l/_init,[u(fun`sort,replace(%qa,%qm,replace(%qu,4,%0,`),|))])])]
&CMD`INIT/SPEED +Init Object=$+init/speed *:@pemit %#=u(ansi) [switch(0,[@@(Valid conflict? Sets conflict into %q0, and full conflict string into %qc. Assumes first conflict if none given.)]complete(iter(setr(c,get(%#/_init`data`conflicts)),first(%i0,`),|,|),switch(%0,*=*,first(%0,=),first(first(%qc,|),`)),conflict type,0,|)[setq(c,grab(%qc,%q0*,|))],%qe,[@@(Are you already in the conflict? Sets full init list into %qa.)]not(match(setr(a,get(%l/_init)),%#`*,|)),You are already in your room's initiative roster.,[@@(Is speed a valid integer? Sets it into %q<speed>.)]cand(isint(setr(speed,last(%0,=))),gte(%q<speed>,0)),Speed value must be a whole number of at least zero.,You join [setr(z,the initiative roster[chr(44)] [if(setr(r,get(%#/_init`data`roll)),rolling,using)] [ladder(setr(2,add(first(setr(1,iter(rest(%qc,`),u(v(db_sheet)/fun`skill`rating,%#,%i0),`,`)),`),get(%#/_init`data`[edit(%q0,%b,_)]`bonus),if(eq(1,%q<speed>),4,0))))] [elements(%qc,2,`)] (tiebreaker[switch(words(%q1,`),1,%bat [ladder(%q1)],s at [itemize(iter(%q1,ladder(%i0),`,`),`)])])[@@(If they're rolling, do it now.)][if(%qr,. Result: [iter(setr(d,iter(1 2 3 4,rand(-1,1))),switch(%i0,-1,-,1,+,0))] ([switch(lmath(add,%qd),<0,%$0,+%$0)]),[@@(Not rolling, so just put 0 into %qd.)]setq(d,0))][switch(%q<speed>,0,[@@(do nothing)],%bwith [switch(%$0,1,Inhuman,2,Supernatural,3,Mythic,ERROR %$0)] Speed)].)][oemit(%#,u(ansi) %k joins %qz)][setq(y,1)])];@assert %qy;think [@@(Set init word maximum into %q<max>.)][setq(max,lmath(max, [@@(Length from enactor's init.)][add(5,words(%qc,`))] [@@(Length of each extant member of _init.)][iter(%qa,words(%i0,`),|)]))][@@(Set full init argument into %qi.)][setq(i,setr(i,[@@(1. dbref)]%#`[@@(2. name)]%k`[@@(3. random tiebreaker)][rand(1,100)]`[@@(4. speed)]%q<speed>`[@@(5. dice result)]%qd`[@@(6. main total)]%q2`[@@(7+ tiebreakers)]%q1),[repeat(`0,sub(%q<max>,words(%qi,`)))])][@@(Set full initiative list into %qa.)][setq(a,u(fun`sort,insert(iter(%qa,switch(sub(%q<max>,words(%i0,`)),>0,%i0[repeat(`0,%$0)],%i0),|,|),-1,%qi,|)))][@@(Set new init.)][attrib_set(%l/_init,%qa)]
&CMD`INIT/UPDATE +Init Object=$+init/update:@pemit %#=u(ansi) [switch(0,[@@(Is there an init roster?)]hasattrval(%l,_init),Your location doesn't have an initiative roster.,You update your location's init roster:%r%r[u(fun`format,setr(a,u(fun`sort,get(%l/_init))))][attrib_set(%l/_init,%qa)])]
&FUN +Init Object=
&FUN`FORMAT +Init Object=[@@(Takes init list %0 and formats it.)]iter(%0,[inum(0)]. [switch(first(%i0,`),#-1,NPC%b)][elements(%i0,2,`)] ([lmath(add,elements(%i0,5 6,`,%b))][switch(elements(%i0,4,`),0,@@(do nothing),1,@@(do nothing),[chr(44)] [switch(%$0,2,Supernatural,3,Mythic,ERROR %$0)] Speed)]),|,%r)
&FUN`SORT +Init Object=[@@(Takes init list %0 and returns it sorted based on Speed, total initiative, tiebreaker skills, and the random tiebreaker.)][setq(w,words(first(%0,|),`))]sortby(lit(#lambda/comp(iter([max(elements(%1,4,`),1)]`[lmath(add,elements(%1,5 6,`,%b))]`[elements(%1,lnum(%qw,6) 3,`)],rjust(%i0,4,0),`,`),iter([max(elements(%0,4,`),1)]`[lmath(add,elements(%0,5 6,`,%b))]`[elements(%0,lnum(%qw,6) 3,`)],rjust(%i0,4,0),`,`))),%0,|)
